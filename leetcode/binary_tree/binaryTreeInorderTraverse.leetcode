/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        return visitInorder(root);
    }
    
    vector<int> visitInorder(TreeNode* root) {
        
        if (!root)
            return vector<int>();
        
        vector<int> toreturn;
        
        vector<int> left = visitInorder(root->left);
        
        if (left.size() != 0) 
            toreturn.insert(toreturn.end(), left.begin(), left.end());
        toreturn.push_back(root->val);
        
        vector<int> right = visitInorder(root->right);
        
        
        if (right.size() != 0) 
            toreturn.insert(toreturn.end(), right.begin(), right.end());
        
        return toreturn;
    }
};
